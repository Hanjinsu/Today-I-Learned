<?php
namespace API\Crawler\Txsi;

use System\API;
use Util\MySQL_Sellymon;
use Util\Parser;
use Util\RestCall;

class MakeList extends API
{
    public $db;
    public $rest;

    function __construct()
    {
        $this->db = new MySQL_Sellymon();
        $this->rest = new RestCall();
    }

    function _process()
    {
        $url = "https://txsi.hometax.go.kr/docs/customer/case/qnaMain.jsp?andSearchWord=&docu_kind=%EC%82%AC%EC%A0%84&textItem=24&textItemNm=%EC%A1%B0%EC%84%B8%ED%8A%B9%EB%A1%80%EC%A0%9C%ED%95%9C%EB%B2%95&keytype=taxitem_cd&keyword=24&where_str=&body=33&juje_title=null&juje_jomun_key=null&juje_law_id=null&Sorttype=titlenote&seltype=1&searchWord=&andSearch=&cpage=1";
        $ssl = true;
        $header = array(
            'Connection: keep-alive',
            'Cache-Control: max-age=0',
            'Upgrade-Insecure-Requests: 1',
            'User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36',
            'Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
            'Referer: https://txsi.hometax.go.kr/docs/customer/case/qnaMain.jsp',
            'Accept-Encoding: gzip, deflate, br',
            'Accept-Language: ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7',
        );

        $rs = $this->rest->GET($url, $ssl, $header);

        // maxcount 추출
        $paging = Parser::GetFullByAttr("div", "class", "paging", $rs);
        $counter = Parser::GetFullByAttr("span", "class", "counter", $paging);
        $counter = Parser::GetValue($counter);
        $pagecounter = Parser::GetFullByTag("span",$counter);
        $pagecounter= Parser::GetValue($pagecounter);
        $maxcount = (int)$pagecounter[6];




    for($j=0;$j<$maxcount;$j++){

        //url index 변경
        if($j!=0) {
            $exurl = explode("&", $url);
            $numexurl = count($exurl);
            $cpage = $exurl[$numexurl - 1];
            $excpage = explode("=", $cpage);
            $nextpagenum = (string)((int)$excpage[1] + 1);
            $excpage[1] = $nextpagenum;
            $newpageindex = implode("=", $excpage);
            $exurl[$numexurl - 1] = $newpageindex;
            $nextcurl = implode("&", $exurl);
            $url = $nextcurl;
        }

            $rs = $this->rest->GET($url, $ssl, $header);
            $tbl_box = Parser::GetFullByAttr("div", "class", "tbl_box tbl_board", $rs);
            $tbody = Parser::GetFullByTag("tbody", $tbl_box);
            $tr = Parser::GetFullByTag("tr", $tbody);

            for ($i = 0; $i < count($tr); $i++) {
                $td = Parser::GetFullByTag("td", $tr[$i]);
                $td = Parser::GetValue($td);

                $num = $td[0];
                $category = $td[1];
                $semok = $td[2];
                $content = Parser::GetFullByTag("a", $td[3]);
                $content = Parser::GetValue($content);

                $title = trim($content[0]);
                $desc = trim($content[1]);

                $span = Parser::GetFullByTag("span", $td[4]);
                $span = Parser::GetValue($span);
                $newspan = implode(" ", $span);

                $this->data[] = array(
                    "num" => $num,
                    "category" => $category,
                    "semok" => $semok,
                    "title" => $title,
                    "desc" => $desc,
                    "cont" => $newspan,
                    /*"exurl" => $exurl,
                    "numexurl" => $numexurl,
                    "cpage" => $cpage,
                    "numpage" => $numpage,
                    "nextpagenum" => $nextpagenum,
                    "newpage" => $newpageindex,
                    "nextcurl" => $nextcurl,*/
                    //"counter" => $counter,
                    //"pagecounter" => $pagecounter,
                    "maxcount" => $maxcount,
                    /*"court" => $court,
                    "date" => $date,*/
                );
            }
        }
    }

